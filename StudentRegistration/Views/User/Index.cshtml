@model IEnumerable<Microsoft.Graph.Models.User>

@{
    ViewData["Title"] = "User List";
}

<h2 class="text-center text-decoration-underline">@ViewData["Title"]</h2>

<div class="row mx-auto">
    <div class="col-md-12">
        <a class="btn btn-primary" asp-area="" asp-controller="User" asp-action="Add">
            <i class="fa-solid fa-user-plus"></i> User Registration
        </a>
    </div>
</div>

<table class="table table-bordered m-2">
    <thead class="table-light">
        <tr>
            <th>Name</th>
            <th>Email</th>
            <th>Role</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in Model)
        {
            <tr>
                <td>@user.DisplayName</td>
                <td>
                    @{
                        var displayIdentities = user.Identities?
                        .Where(identity => identity.SignInType != "userPrincipalName")
                        .Select(identity => $"{identity.SignInType}: {identity.IssuerAssignedId} ({identity.Issuer})");

                        var displayOtherMails = user.OtherMails;
                    }

                    @if (displayIdentities != null && displayIdentities.Any())
                    {
                        <p> @string.Join(", ", displayIdentities)</p>
                    }

                   @*  @if (displayOtherMails != null && displayOtherMails.Any())
                    {
                        <p>Other Emails: @string.Join(", ", displayOtherMails)</p>
                    } *@
                </td>
                <td>@user.JobTitle</td>
                <td>
                    <a asp-controller="User" asp-action="Edit" asp-route-id="@user.Id">
                        <i class="fa-solid fa-pen-to-square"></i>
                    </a>
                </td>
            </tr>
        }
    </tbody>
</table>
